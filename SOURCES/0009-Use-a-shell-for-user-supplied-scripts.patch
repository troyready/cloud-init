From 1a3edcb767fa7788e9251be25d2b2aeb1a2fb6b5 Mon Sep 17 00:00:00 2001
From: Andrew Jorgensen <ajorgens@amazon.com>
Date: Thu, 5 Sep 2013 13:53:02 -0700
Subject: [PATCH] Use a shell for user-supplied scripts

This allows us to run scripts that don't start with a shebang

Reviewed-by: Matt Nierzwicki <nierzwic@amazon.com>
Reviewed-by: Ethan Faust <efaust@amazon.com>
---
 cloudinit/handlers/boot_hook.py | 4 +++-
 cloudinit/util.py               | 4 +++-
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/cloudinit/handlers/boot_hook.py b/cloudinit/handlers/boot_hook.py
index 3a50cf8..4c0ba78 100644
--- a/cloudinit/handlers/boot_hook.py
+++ b/cloudinit/handlers/boot_hook.py
@@ -62,7 +62,9 @@ class BootHookPartHandler(handlers.Handler):
             env = os.environ.copy()
             if self.instance_id is not None:
                 env['INSTANCE_ID'] = str(self.instance_id)
-            util.subp([filepath], env=env)
+            # Use shell=True so that if the user omits the #!, there is still
+            # some chance it will succeed.
+            util.subp([filepath], env=env, shell=True)
         except util.ProcessExecutionError:
             util.logexc(LOG, "Boothooks script %s execution error", filepath)
         except Exception:
diff --git a/cloudinit/util.py b/cloudinit/util.py
index e78cd0c..355effa 100644
--- a/cloudinit/util.py
+++ b/cloudinit/util.py
@@ -638,7 +638,9 @@ def runparts(dirp, skip_no_exist=True, exe_prefix=None):
         if os.path.isfile(exe_path) and os.access(exe_path, os.X_OK):
             attempted.append(exe_path)
             try:
-                subp(prefix + [exe_path], capture=False)
+                # Use shell=True so that if the user omits the #!, there is
+                # still some chance it will succeed.
+                subp(prefix + [exe_path], capture=False, shell=True)
             except ProcessExecutionError as e:
                 logexc(LOG, "Failed running %s [%s]", exe_path, e.exit_code)
                 failed.append(e)
-- 
2.1.0

